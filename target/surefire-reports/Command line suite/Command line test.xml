<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-1ECDSFV" failures="8" tests="10" name="Command line test" time="11.248" errors="0" timestamp="2023-11-07T02:39:18 GMT-03:00">
  <testcase classname="dev.serverest.runners.TestNGRunner" name="scenario" time="4.472">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;o status code será 201&amp;apos; is undefined.
You can implement this step using the snippet(s) below:

@Entao(&amp;quot;o status code será {int}&amp;quot;)
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'o status code será 201' is undefined.
You can implement this step using the snippet(s) below:

@Entao("o status code será {int}")
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at dev.serverest.runners.TestNGRunner.scenario(TestNGRunner.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- scenario -->
  <testcase classname="dev.serverest.runners.TestNGRunner" name="scenario" time="0.464">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;o status code será 201&amp;apos; is undefined.
You can implement this step using the snippet(s) below:

@Entao(&amp;quot;o status code será {int}&amp;quot;)
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'o status code será 201' is undefined.
You can implement this step using the snippet(s) below:

@Entao("o status code será {int}")
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at dev.serverest.runners.TestNGRunner.scenario(TestNGRunner.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- scenario -->
  <testcase classname="dev.serverest.runners.TestNGRunner" name="scenario" time="0.013">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;tenho uma conta já cadastrada&amp;apos; and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Dado(&amp;quot;tenho uma conta já cadastrada&amp;quot;)
public void tenhoUmaContaJáCadastrada() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Entao(&amp;quot;o status code será {int}&amp;quot;)
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'tenho uma conta já cadastrada' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Dado("tenho uma conta já cadastrada")
public void tenhoUmaContaJáCadastrada() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Entao("o status code será {int}")
public void oStatusCodeSerá(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at dev.serverest.runners.TestNGRunner.scenario(TestNGRunner.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- scenario -->
  <testcase classname="dev.serverest.tests.LoginTest" name="Login" time="0.362">
    <failure type="java.lang.AssertionError" message="expected [200] but found [401]">
      <![CDATA[java.lang.AssertionError: expected [200] but found [401]
at dev.serverest.tests.LoginTest.Login(LoginTest.java:57)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 44 stack frames]]>
    </failure>
  </testcase> <!-- Login -->
  <testcase classname="dev.serverest.tests.LoginTest" name="ProdutosGet" time="0.382">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at dev.serverest.api.applicationAPI.ProdutosAPI.assertProductNameThroughList(ProdutosAPI.java:49)
at dev.serverest.tests.LoginTest.ProdutosGet(LoginTest.java:68)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 39 stack frames]]>
    </failure>
  </testcase> <!-- ProdutosGet -->
  <testcase classname="dev.serverest.tests.LoginTest" name="ProdutosPost" time="2.573"/>
  <testcase classname="dev.serverest.tests.LoginTest" name="UsuariosDelete" time="0.314">
    <failure type="java.lang.AssertionError" message="expected [Registro excluÃ­do com sucesso] but found [Nenhum registro excluído]">
      <![CDATA[java.lang.AssertionError: expected [Registro excluÃ­do com sucesso] but found [Nenhum registro excluído]
at dev.serverest.tests.LoginTest.UsuariosDelete(LoginTest.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 43 stack frames]]>
    </failure>
  </testcase> <!-- UsuariosDelete -->
  <testcase classname="dev.serverest.tests.LoginTest" name="UsuariosGet" time="0.321">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at dev.serverest.api.applicationAPI.UsuariosAPI.assertNameThroughUserList(UsuariosAPI.java:78)
at dev.serverest.tests.LoginTest.UsuariosGet(LoginTest.java:32)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 39 stack frames]]>
    </failure>
  </testcase> <!-- UsuariosGet -->
  <testcase classname="dev.serverest.tests.LoginTest" name="UsuariosPost" time="0.855"/>
  <testcase classname="dev.serverest.tests.LoginTest" name="UsuariosPut" time="0.413">
    <failure type="java.lang.AssertionError" message="expected [Registro alterado com sucesso] but found [Este email já está sendo usado]">
      <![CDATA[java.lang.AssertionError: expected [Registro alterado com sucesso] but found [Este email já está sendo usado]
at dev.serverest.tests.LoginTest.UsuariosPut(LoginTest.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 43 stack frames]]>
    </failure>
  </testcase> <!-- UsuariosPut -->
</testsuite> <!-- Command line test -->
